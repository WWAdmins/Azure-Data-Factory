{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "SQLtoDataVerse"
		},
		"CommonDataServiceForApps1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'CommonDataServiceForApps1'"
		},
		"WWSQL003_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'WWSQL003'"
		},
		"WWSQL003_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'WWSQL003'"
		},
		"CommonDataServiceForApps1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "wwdigital@wineworks.co.nz"
		},
		"WWSQL003_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "wineworksgroup\\WWG_Service"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CommonDataServiceForApps1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CommonDataServiceForApps",
				"typeProperties": {
					"deploymentType": "Online",
					"serviceUri": "https://wineworks.crm6.dynamics.com/",
					"authenticationType": "Office365",
					"username": "[parameters('CommonDataServiceForApps1_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('CommonDataServiceForApps1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WWSQL003')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WWSQL003IntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WWWEB002Production')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BillOfMaterials')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CommonDataServiceForApps1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Bill Of Material"
				},
				"annotations": [],
				"type": "CommonDataServiceForAppsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "ww_billofmaterials"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CommonDataServiceForApps1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataVerse_SupplierForProductionLines')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CommonDataServiceForApps1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Supplier for Production Runs"
				},
				"annotations": [],
				"type": "CommonDataServiceForAppsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "ww_supplierforproductionlines"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CommonDataServiceForApps1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Runs')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CommonDataServiceForApps1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Runs"
				},
				"annotations": [],
				"type": "CommonDataServiceForAppsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "ww_run"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CommonDataServiceForApps1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WWSQL003')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('WWSQL003_connectionString')]",
					"userName": "[parameters('WWSQL003_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('WWSQL003_password')]"
					}
				},
				"connectVia": {
					"referenceName": "WWWEB002Production",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/WWWEB002Production')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VWRun')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WWSQL003",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ProductionWorkOrderId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "workOrderType",
						"type": "varchar"
					},
					{
						"name": "ProductionLineId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PendingUpdate",
						"type": "bit"
					},
					{
						"name": "Run Id",
						"type": "uniqueidentifier"
					},
					{
						"name": "RunDate",
						"type": "date"
					},
					{
						"name": "ProductionRunNumber",
						"type": "nvarchar"
					},
					{
						"name": "ProductionLine",
						"type": "uniqueidentifier"
					},
					{
						"name": "Site",
						"type": "nvarchar"
					},
					{
						"name": "Client",
						"type": "nvarchar"
					},
					{
						"name": "Customer ID",
						"type": "nvarchar"
					},
					{
						"name": "ClientWWCode",
						"type": "nvarchar"
					},
					{
						"name": "ClientWorkOrderReference",
						"type": "nvarchar"
					},
					{
						"name": "Variety",
						"type": "nvarchar"
					},
					{
						"name": "VintageVariety",
						"type": "nvarchar"
					},
					{
						"name": "WineVolume",
						"type": "decimal",
						"precision": 24,
						"scale": 5
					},
					{
						"name": "StateCode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AdditionalInstructions",
						"type": "nvarchar"
					},
					{
						"name": "BottleGasCoverType",
						"type": "nvarchar"
					},
					{
						"name": "CarbonationSaturation",
						"type": "decimal",
						"precision": 3,
						"scale": 1
					},
					{
						"name": "ClientBatchCode",
						"type": "nvarchar"
					},
					{
						"name": "CO2ReceivalSpecification",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "nvarchar"
					},
					{
						"name": "CreatedOn",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "ExonetIntegrationError",
						"type": "nvarchar"
					},
					{
						"name": "ExonetSalesOrderNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastCellarFilterDate",
						"type": "date"
					},
					{
						"name": "Organic",
						"type": "bit"
					},
					{
						"name": "PushedToExonet",
						"type": "bit"
					},
					{
						"name": "PushedToExonetDate",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "PushedToScale",
						"type": "bit"
					},
					{
						"name": "PushedToScaleDate",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "RequestorName",
						"type": "nvarchar"
					},
					{
						"name": "ScaleIntegrationError",
						"type": "nvarchar"
					},
					{
						"name": "SO2ReceivalSpecification",
						"type": "nvarchar"
					},
					{
						"name": "StartupWinemaker",
						"type": "nvarchar"
					},
					{
						"name": "UpdatedBy",
						"type": "nvarchar"
					},
					{
						"name": "UpdatedOn",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "Vintage",
						"type": "nvarchar"
					},
					{
						"name": "BottlingFiltrationType",
						"type": "nvarchar"
					},
					{
						"name": "CellarFiltrationType",
						"type": "nvarchar"
					},
					{
						"name": "ExportCertification",
						"type": "nvarchar"
					},
					{
						"name": "QuantityCases",
						"type": "decimal",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UseAllStock",
						"type": "bit"
					},
					{
						"name": "CaseVariability",
						"type": "varchar"
					},
					{
						"name": "FullProductName",
						"type": "nvarchar"
					},
					{
						"name": "PackType",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RunLine",
						"type": "nvarchar"
					},
					{
						"name": "FinishedGoodsStockCode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockToConsumeLotRunNo",
						"type": "nvarchar"
					},
					{
						"name": "End Market",
						"type": "nvarchar"
					},
					{
						"name": "LastUpdatedOn",
						"type": "datetimeoffset",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dataverse",
					"table": "vwRuns"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WWSQL003')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WWSQL003_Portal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WWSQL003",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dataverse",
					"table": "vwBom"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WWSQL003')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bill Of Material')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Bill Of Material",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "\n\n\tSELECT *,CONVERT(datetime, \n               SWITCHOFFSET(CONVERT(datetimeoffset, \n                                    DateAdd(hh,-12,LastUpdatedOn) AT TIME ZONE 'New Zealand Standard Time'), \n                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))) [lastUpdatedOnNZST] from\n\t(SELECT\n        cast(bom.Id as nvarchar) [Bom ID], \n        cast(CONVERT(BINARY(16), REVERSE(CONVERT(BINARY(16),concat(cast(bom.Id as char(5)),cast(bwo.Id as char(6)),cast('BOT' as char(3)), 2)))) as uniqueidentifier) [Bill Of Materials ID],\n        bwol.BottlingWorkOrderId as ProductionWorkOrderId, \n        bom.StockCode, \n        bwol.Sequence, \n        bwol.ProductionNotes, \n        book.ProductionLineId, \n        bom.StockCodeDescription, \n        bwol.CasesToProcess / bom.CartonsPerPallet Pallets, \n        cast(bom.BottlesPerCarton * bom.CartonsPerPallet as int) BottlesPerPallet, \n        cast(bwol.CasesToProcess * bom.BottlesPerCarton as int) Bottles,\n        bwol.CasesToProcess,\n        bom.CartonsPerPallet,\n        cast(sc.StockCode as nvarchar) [Screwcap Stockcode],\n        scpt.Name [Screwcap Printing],\n        scc.Name [Screwcap Colour],\n        cast(cc.StockCode as nvarchar) [Cork Stockcode],\n        ccpt.Name [Cork Printing],\n        ccc.Name [Cork Colour],\n        cz.Name [Cork Length],\n        bc.Name [Bottle Colour],\n        [c].[BottlingWorkOrderRunAlert] AS [Generic Client Instructions],\n        [bwo].[AdditionalInstructions] AS [Work Order Instructions],\n        [bwol].[AdditionalInstructions] AS [BOM Instructions For This Run],\n        cast([bom].[AdditionalInstructions] AS nvarchar(450)) [Bom Specific Instructions],\n        (CASE\n                    WHEN bwo.ClientBatchCode IS NULL THEN ''\n                    WHEN bwo.ClientBatchCode like '' THEN ''\n                    ELSE (bwo.ClientBatchCode + '-')\n        END) + book.ProductionRunNumber + c.WWCode + ISNULL(vin.WWCode, '') + ISNULL([var].WWCode, '') AS [BottleLaserCode],\n        [botlook].[WWName] AS [Bottle],\n        [bot].StockCode [Bottle Stock Code],\n        [bs].[Name] AS [Bottle Size],\n        [bt].[WWCode] AS [Bottle Type],\n        [clo].[WWName] AS [Closure],\n        cast([cov].[WWName] as nvarchar(100)) AS [Cover],\n        [fla].[WWName] AS [Front Label],\n        cast([bom].FrontLabelHeight as nvarchar) [Front Label Height],\n        cast([bla].[WWName] as nvarchar(100)) AS [Back Label],\n        cast([bom].BackLabelHeight as nvarchar(100)) [Back Label Height],\n        cast([ola].[WWName] AS nvarchar(90)) [Other Label],\n        CAST([bom].[OtherLabelPlacement] AS NVARCHAR(MAX)) AS [Other Label Placement],\n        [ola2].[WWName] AS [Other Label2],\n        [bom].OtherLabel2Placement [Other Label2 Placement],\n        [blaink].[Name] AS [Back Label Inkjet Code],\n        [bom].BackLabelAdditionalText [Back Label Additional Text],\n        cast([bom].BackLabelInkjetPlacement as nvarchar(99)) [Back Label Inkjet Placement],\n        [div].[WWName] AS [Divider],\n        cast([car].[WWName] as nvarchar(100)) AS [Carton],\n        [carwinvar].[Name] AS [Carton Variety],\n        [cbt].[WWCode] AS [Carton Bottle Type],\n        cast([bom].CartonInkjetText as nvarchar(99)) [Carton Inkjet Text],\n        [bom].CartonInkjetPlacement [Carton Inkjet Placement],\n        [carla].[Name] AS [Carton Label],\n        [pal].[WWName] AS [Pallet],\n        PT.Name as [Pallet Type],\n        CASE WHEN [bom].[HardboardTopCover] IS NOT NULL AND [bom].[HardboardTopCover] = 1 THEN 'Yes' WHEN [bom].[HardboardTopCover] IS NOT NULL AND [bom].[HardboardTopCover] = 0 THEN 'No' ELSE '-' END AS [Hardboard Top Cover],\n        [sli].[Name] AS [Slipsheet],\n        [palstapat].[Name] AS [Pallet Stacking Pattern],\n        [extdg1].[WWName] AS [Extra Dry Good1],\n        [extdg2].[WWName] AS [Extra Dry Good2],\n        cast(case when bom.StatusId = 3 then 0\n        else 1\n        end as int) [Status],\n        bot.QuantityPerPallet [Depal Bottles Per Pallet],\n        (SELECT Max(v) FROM (VALUES (bwo.UpdatedOn), (book.UpdatedOn), (bom.UpdatedOn), (sc.UpdatedOn), (cc.UpdatedOn), (botlook.UpdatedOn), (bot.UpdatedOn),\n        (clo.UpdatedOn), (cov.UpdatedOn), (fla.UpdatedOn), (bla.UpdatedOn), (ola.UpdatedOn), (ola2.UpdatedOn), (car.UpdatedOn), (carton.UpdatedOn), (div.UpdatedOn), (pal.UpdatedOn),\n        (sli.UpdatedOn), (extdg1.UpdatedOn), (extdg2.UpdatedOn), (Pallet.UpdatedOn)) AS value(v)) as [LastUpdatedOn]\n    FROM \n    companies.BottlingWorkOrderLine bwol \n    INNER join companies.BillOfMaterial bom on bwol.BillOfMaterialId = bom.Id \n    INNER JOIN [companies].[BottlingWorkOrder] AS [bwo] ON [bwol].[BottlingWorkOrderId] = [bwo].[Id]\n    INNER join companies.ProductionBooking book on bwol.BottlingWorkOrderId = book.BottlingWorkOrderId\n    INNER JOIN [companies].[Company] AS c ON c.[Id] = bwo.[CompanyId]\n    LEFT JOIN [companies].[DryGood] sc on sc.id = bom.ClosureId and  sc.[DryGoodsCategoryId] = 8\n    LEFT JOIN lookups.PrinterType scpt on scpt.Id = sc.ScrewcapPrintTypeId\n    LEFT JOIN lookups.Colour scc on scc.Id=sc.ScrewcapColour1Id\n    LEFT JOIN [companies].[DryGood] cc on cc.id = bom.ClosureId and  cc.[DryGoodsCategoryId] = 2\n    LEFT JOIN lookups.PrinterType ccpt on scpt.Id = cc.CorkPrintTypeId\n    LEFT JOIN lookups.Colour ccc on ccc.Id=cc.CoverColour1Id\n    LEFT JOIN lookups.CorkSize cz on cz.Id=cc.CorkSizeId\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [botlook] ON [bom].[BottleId] = [botlook].[Id]\n    LEFT OUTER JOIN [companies].[DryGood] AS [bot] ON [bom].[BottleId] = [bot].[Id]\n    LEFT JOIN lookups.BottleColour bc on bc.Id=[bot].BottleColourId\n    LEFT OUTER JOIN [lookups].[BottleSize] AS [bs] ON [bs].[Id] = [bot].[BottleSizeId]\n    LEFT OUTER JOIN [lookups].[BottleType] AS [bt] ON [bt].[Id] = [bot].[BottleTypeId]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [clo] ON [bom].[ClosureId] = [clo].[Id]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [cov] ON [bom].[CoverId] = [cov].[Id]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [fla] ON [bom].[FrontLabelId] = [fla].[Id]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [bla] ON [bom].[BackLabelId] = [bla].[Id]\n    LEFT OUTER JOIN [lookups].[InkjetCode] AS [blaink] ON [bom].[BackLabelInkjetCodeId] = [blaink].[Id]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [ola] ON [bom].[OtherLabelId] = [ola].[Id]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [ola2] ON [bom].[OtherLabel2Id] = [ola2].[Id]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [car] ON [bom].[CartonId] = [car].[Id]\n    LEFT OUTER JOIN [companies].[DryGood] AS [carton] ON [bom].[CartonId] = [carton].[Id]\n    LEFT OUTER JOIN [lookups].[CartonLabel] AS [carla] ON [bom].[CartonLabelId] = [carla].[Id]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [div] ON [bom].[DividerId] = [div].[Id]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [pal] ON [bom].[PalletId] = [pal].[Id]\n    LEFT OUTER JOIN [lookups].[PalletStackingPattern] AS [palstapat] ON [bom].[PalletStackingPatternId] = [palstapat].[Id]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [sli] ON [bom].[SlipsheetId] = [sli].[Id]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [extdg1] ON [bom].[ExtraDryGood1Id] = [extdg1].[Id]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [extdg2] ON [bom].[ExtraDryGood2Id] = [extdg2].[Id]\n    LEFT OUTER JOIN [lookups].[Variety] AS [carwinvar] ON [carton].[CartonVarietyId] = [carwinvar].[Id]\t\t\t\t\t\t\n    LEFT OUTER JOIN [lookups].[BottleType] AS [cbt] ON [cbt].[Id] = [carton].[CartonBottleTypeId]\n    LEFT JOIN companies.DryGood Pallet ON Pallet.id=bom.PalletId\n    LEFT JOIN lookups.PalletType PT ON PT.Id=Pallet.PalletTypeId\n    LEFT JOIN [lookups].[Variety] [var] ON bwo.VarietyId = [var].[Id]\n    LEFT JOIN [lookups].[Vintage] [vin] ON bwo.VintageId = [vin].[Id]\n    WHERE cast(book.ExpectedStartDateTime as Date) > getdate() - 3\n\n    Union All\n\n    SELECT \n    cast(bom.Id as nvarchar) [Bom ID], \n    cast(CONVERT(BINARY(16), REVERSE(CONVERT(BINARY(16),concat(cast(bom.Id as char(5)),cast(rwo.Id as char(6)),cast('LBL' as char(3)), 2)))) as uniqueidentifier) [Bill Of Materials ID],\n    rwo.Id as ProductionWorkOrderId, \n    bom.StockCode, \n    0 as Sequence, \n    rwo.ProductionNotes, \n    book.ProductionLineId, \n    bom.StockCodeDescription, \n    rwo.CasesToCreate / bom.CartonsPerPallet Pallets, \n    cast(bom.BottlesPerCarton * bom.CartonsPerPallet as int) BottlesPerPallet, \n    cast(rwo.CasesToCreate * bom.BottlesPerCarton as int) Bottles,\n    rwo.CasesToCreate as [CasesToProcess],\n    bom.CartonsPerPallet,\n    cast(sc.StockCode as nvarchar) [Screwcap Stockcode],\n    scpt.Name [Screwcap Printing],\n    scc.Name [Screwcap Colour],\n    cast(cc.StockCode as nvarchar) [Cork Stockcode],\n    ccpt.Name [Cork Printing],\n    ccc.Name [Cork Colour],\n    cz.Name [Cork Length],\n    bc.Name [Bottle Colour],\n    [c].[BottlingWorkOrderRunAlert] AS [Generic Client Instructions],\n    rwo.[AdditionalInstructions] AS [Work Order Instructions],\n    'NA' AS [BOM Instructions For This Run],  --Investigate\n    cast([bom].[AdditionalInstructions] AS nvarchar(450)) [Bom Specific Instructions],\n    '' + book.ProductionRunNumber + c.WWCode + ISNULL(vin.WWCode, '') + ISNULL([var].WWCode, '') \n     AS [BottleLaserCode],\n    [botlook].[WWName] AS [Bottle],\n    [bot].StockCode [Bottle Stock Code],\n    [bs].[Name] AS [Bottle Size],\n    [bt].[WWCode] AS [Bottle Type],\n    [clo].[WWName] AS [Closure],\n    cast([cov].[WWName] as nvarchar(100)) AS [Cover],\n    [fla].[WWName] AS [Front Label],\n    cast([bom].FrontLabelHeight as nvarchar) [Front Label Height],\n    cast([bla].[WWName] as nvarchar(100)) AS [Back Label],\n    cast([bom].BackLabelHeight as nvarchar) [Back Label Height],\n    cast([ola].[WWName] AS nvarchar(90)) [Other Label],\n    CAST([bom].[OtherLabelPlacement] AS NVARCHAR(MAX)) AS [Other Label Placement],\n    [ola2].[WWName] AS [Other Label2],\n    [bom].OtherLabel2Placement [Other Label2 Placement],\n    [blaink].[Name] AS [Back Label Inkjet Code],\n    [bom].BackLabelAdditionalText [Back Label Additional Text],\n    cast([bom].BackLabelInkjetPlacement as nvarchar(99)) [Back Label Inkjet Placement],\n    [div].[WWName] AS [Divider],\n     cast([car].[WWName] as nvarchar(100)) AS [Carton],\n    [carwinvar].[Name] AS [Carton Variety],\n    [cbt].[WWCode] AS [Carton Bottle Type],\n    cast([bom].CartonInkjetText as nvarchar(99)) [Carton Inkjet Text],\n    [bom].CartonInkjetPlacement [Carton Inkjet Placement],\n    [carla].[Name] AS [Carton Label],\n    [pal].[WWName] AS [Pallet],\n    PT.Name as [Pallet Type],\n    CASE WHEN [bom].[HardboardTopCover] IS NOT NULL AND [bom].[HardboardTopCover] = 1 THEN 'Yes' WHEN [bom].[HardboardTopCover] IS NOT NULL AND [bom].[HardboardTopCover] = 0 THEN 'No' ELSE '-' END AS [Hardboard Top Cover],\n    [sli].[Name] AS [Slipsheet],\n    [palstapat].[Name] AS [Pallet Stacking Pattern],\n    [extdg1].[WWName] AS [Extra Dry Good1],\n    [extdg2].[WWName] AS [Extra Dry Good2],\n    cast(case when bom.StatusId = 3 then 0\n    else 1\n    end as int) [Status],\n    bot.QuantityPerPallet [Depal Bottles Per Pallet],\n    (SELECT Max(v) FROM (VALUES (rwo.UpdatedOn), (bom.UpdatedOn), (book.UpdatedOn), (sc.UpdatedOn), (cc.UpdatedOn), (botlook.UpdatedOn), (bot.UpdatedOn),\n        (clo.UpdatedOn), (cov.UpdatedOn), (fla.UpdatedOn), (bla.UpdatedOn), (ola.UpdatedOn), (ola2.UpdatedOn), (car.UpdatedOn), (carton.UpdatedOn), (div.UpdatedOn), (pal.UpdatedOn),\n        (sli.UpdatedOn), (extdg1.UpdatedOn), (extdg2.UpdatedOn), (Pallet.UpdatedOn)) AS value(v)) as [LastUpdatedOn]\n    FROM \n    companies.LabellingOrReworkOrder rwo \n    INNER join companies.BillOfMaterial bom on rwo.StockToCreateId = bom.Id \n    INNER join companies.ProductionBooking book on rwo.Id = book.LabellingOrReworkOrderId\n    INNER JOIN [companies].[Company] AS c ON c.[Id] = rwo.[CompanyId]\n    LEFT JOIN [companies].[DryGood] sc on sc.id = bom.ClosureId and  sc.[DryGoodsCategoryId] = 8\n    LEFT JOIN lookups.PrinterType scpt on scpt.Id = sc.ScrewcapPrintTypeId\n    LEFT JOIN lookups.Colour scc on scc.Id=sc.ScrewcapColour1Id\n    LEFT JOIN [companies].[DryGood] cc on cc.id = bom.ClosureId and  cc.[DryGoodsCategoryId] = 2\n    LEFT JOIN lookups.PrinterType ccpt on scpt.Id = cc.CorkPrintTypeId\n    LEFT JOIN lookups.Colour ccc on ccc.Id=cc.CoverColour1Id\n    LEFT JOIN lookups.CorkSize cz on cz.Id=cc.CorkSizeId\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [botlook] ON [bom].[BottleId] = [botlook].[Id]\n    LEFT OUTER JOIN [companies].[DryGood] AS [bot] ON [bom].[BottleId] = [bot].[Id]\n    LEFT JOIN lookups.BottleColour bc on bc.Id=[bot].BottleColourId\n    LEFT OUTER JOIN [lookups].[BottleSize] AS [bs] ON [bs].[Id] = [bot].[BottleSizeId]\n    LEFT OUTER JOIN [lookups].[BottleType] AS [bt] ON [bt].[Id] = [bot].[BottleTypeId]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [clo] ON [bom].[ClosureId] = [clo].[Id]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [cov] ON [bom].[CoverId] = [cov].[Id]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [fla] ON [bom].[FrontLabelId] = [fla].[Id]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [bla] ON [bom].[BackLabelId] = [bla].[Id]\n    LEFT OUTER JOIN [lookups].[InkjetCode] AS [blaink] ON [bom].[BackLabelInkjetCodeId] = [blaink].[Id]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [ola] ON [bom].[OtherLabelId] = [ola].[Id]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [ola2] ON [bom].[OtherLabel2Id] = [ola2].[Id]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [car] ON [bom].[CartonId] = [car].[Id]\n    LEFT OUTER JOIN [companies].[DryGood] AS [carton] ON [bom].[CartonId] = [carton].[Id]\n    LEFT OUTER JOIN [lookups].[CartonLabel] AS [carla] ON [bom].[CartonLabelId] = [carla].[Id]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [div] ON [bom].[DividerId] = [div].[Id]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [pal] ON [bom].[PalletId] = [pal].[Id]\n    LEFT OUTER JOIN [lookups].[PalletStackingPattern] AS [palstapat] ON [bom].[PalletStackingPatternId] = [palstapat].[Id]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [sli] ON [bom].[SlipsheetId] = [sli].[Id]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [extdg1] ON [bom].[ExtraDryGood1Id] = [extdg1].[Id]\n    LEFT OUTER JOIN [companies].[vwDryGoodName] AS [extdg2] ON [bom].[ExtraDryGood2Id] = [extdg2].[Id]\n    LEFT OUTER JOIN [lookups].[Variety] AS [carwinvar] ON [carton].[CartonVarietyId] = [carwinvar].[Id]\t\t\t\t\t\t\n    LEFT OUTER JOIN [lookups].[BottleType] AS [cbt] ON [cbt].[Id] = [carton].[CartonBottleTypeId]\n    LEFT JOIN companies.DryGood Pallet ON Pallet.id=bom.PalletId\n    LEFT JOIN lookups.PalletType PT ON PT.Id=Pallet.PalletTypeId\n    LEFT JOIN [lookups].[Variety] [var] ON book.VarietyId = [var].[Id]\n    LEFT JOIN [lookups].[Vintage] [vin] ON book.VintageId = [vin].[Id]\n    WHERE cast(book.ExpectedStartDateTime as Date) > getdate() - 3)a",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "CommonDataServiceForAppsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Bom ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_bomid",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Bill Of Materials ID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "ww_billofmaterialsid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "ProductionWorkOrderId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ww_bomworkorderid",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "StockCode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ww_bomstockcode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Sequence",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ww_bomsequence",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ProductionNotes",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_bomproductionnotes",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StockCodeDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_stockcodedescription",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Pallets",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 19,
											"precision": 38
										},
										"sink": {
											"name": "ww_pallets",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "BottlesPerPallet",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ww_bottlesperpallet",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bottles",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ww_bottles",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CasesToProcess",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "ww_casestoprocess",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "CartonsPerPallet",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "ww_cartonsperpallet",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Screwcap Stockcode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "crc5d_screwcapstockcode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Screwcap Printing",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "crc5d_screwcapprinting",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Screwcap Colour",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "crc5d_screwcapcolour",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Cork Stockcode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "crc5d_corkstockcode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Cork Printing",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "crc5d_corkprinting",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Cork Colour",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "crc5d_corkcolour",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Cork Length",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "crc5d_corklength",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Bottle Colour",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "crc5d_bottlecolour",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Generic Client Instructions",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_genericclientinstructions",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Work Order Instructions",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_workorderinstructions",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BOM Instructions For This Run",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_bominstructionsforthisrun",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Bom Specific Instructions",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_bomspecificinstructions",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BottleLaserCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_bottlelasercode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Bottle",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_bottle",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Bottle Stock Code",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "crc5d_bottlestockcode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Bottle Size",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_bottlesize",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Bottle Type",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_bottletype",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Closure",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_closure",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Cover",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_cover",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Front Label",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_frontlabel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Front Label Height",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_frontlabelheight",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Back Label",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_backlabel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Back Label Height",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_backlabelheight",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Other Label",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_otherlabel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Other Label Placement",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_otherlabelplacement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Other Label2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_otherlabel2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Other Label2 Placement",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ww_otherlabel2placement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Back Label Inkjet Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_backlabelinkjetcode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Back Label Additional Text",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_backlabeladditionaltext",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Back Label Inkjet Placement",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_backlabelinkjetplacement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Divider",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_divider",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Carton",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_carton",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Carton Variety",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_cartonvariety",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Carton Bottle Type",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_cartonbottletype",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Carton Inkjet Text",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_cartoninkjettext",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Carton Inkjet Placement",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_cartoninkjetplacement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Carton Label",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_cartonlabel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Pallet",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_pallet",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Pallet Type",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "crc5d_pallettype",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Hardboard Top Cover",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ww_hardboardtopcover",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Slipsheet",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_slipsheet",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Pallet Stacking Pattern",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_palletstackingpattern",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Extra Dry Good1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_extradrygood1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Extra Dry Good2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_extradrygood2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "statecode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Depal Bottles Per Pallet",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "ww_depalbottlesperpallet",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "lastUpdatedOnNZST",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ww_bomupdatedon",
											"type": "DateTime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WWSQL003_Portal",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BillOfMaterials",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send fail email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Bill Of Material",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-29.australiasoutheast.logic.azure.com:443/workflows/df4cbaa8432242a48a8f94e0ad35a549/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=_feDHOrvyA3xbAug9hU1HkgoovgPldq-nuqZI1EsSa0",
							"connectVia": {
								"referenceName": "WWWEB002Production",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"Subject": "An error has occurred!",
								"ErrorMessage": "The ADF pipeline has crashed! Please check the logs.",
								"EmailTo": "Tejaswi.Datla@wineworks.co.nz"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WWSQL003_Portal')]",
				"[concat(variables('factoryId'), '/datasets/BillOfMaterials')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/WWWEB002Production')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Runs')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Runs",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "."
							},
							{
								"name": "Destination",
								"value": "ww_run"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": " Select cast(\n\t\tCASE when ProductionLineId=1 then '95532c19-019c-eb11-b1ac-000d3a6ae149'\nwhen ProductionLineId=2 then '98532c19-019c-eb11-b1ac-000d3a6ae149'\nwhen ProductionLineId=3 then '99532c19-019c-eb11-b1ac-000d3a6ae149'\nwhen ProductionLineId=4 then '9a532c19-019c-eb11-b1ac-000d3a6ae149'\nwhen ProductionLineId=5 then '9c532c19-019c-eb11-b1ac-000d3a6ae149'\nwhen ProductionLineId=6 then '9d532c19-019c-eb11-b1ac-000d3a6ae149'\nwhen ProductionLineId=7 then '9e532c19-019c-eb11-b1ac-000d3a6ae149'\nwhen ProductionLineId=8 then '9f532c19-019c-eb11-b1ac-000d3a6ae149'\nwhen ProductionLineId=9 then 'a0532c19-019c-eb11-b1ac-000d3a6ae149'\nwhen ProductionLineId=10 then 'a1532c19-019c-eb11-b1ac-000d3a6ae149'\nwhen ProductionLineId=11 then 'a2532c19-019c-eb11-b1ac-000d3a6ae149'\nwhen ProductionLineId=12 then 'a3532c19-019c-eb11-b1ac-000d3a6ae149'\nwhen ProductionLineId=13 then 'a5532c19-019c-eb11-b1ac-000d3a6ae149'\nwhen ProductionLineId=14 then 'a6532c19-019c-eb11-b1ac-000d3a6ae149'\nwhen ProductionLineId=15 then 'a7532c19-019c-eb11-b1ac-000d3a6ae149'\nwhen ProductionLineId=16 then 'a8532c19-019c-eb11-b1ac-000d3a6ae149'\n\n       END as uniqueidentifier) ProductionLineGUID ,cast(0 as int) as [Status],*\n, CONVERT(datetime, \n               SWITCHOFFSET(CONVERT(datetimeoffset, \n                                    DateAdd(hh,-12,LastUpdatedOn) AT TIME ZONE 'New Zealand Standard Time'), \n                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))) [lastUpdatedOnNZST]\nfrom dataverse.VWRuns",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "CommonDataServiceForAppsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "StateCode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "statecode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Client",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_clientname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ClientWorkOrderReference",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_clientworkorderreference",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PendingUpdate",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "ww_pendingupdate",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "RunDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "ww_rundate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Run Id",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "ww_runid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "ProductionRunNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_runnumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ProductionLineGUID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "ww_runproductionline",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "Variety",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_variety",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Vintage",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_vintage",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VintageVariety",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_vintagevariety",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ProductionWorkOrderId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ww_workorderid",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "workOrderType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ww_workordertype",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "lastUpdatedOnNZST",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										},
										"sink": {
											"name": "ww_workorderupdatedon",
											"type": "DateTime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "VWRun",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Runs",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send fail email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Runs",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-31.australiasoutheast.logic.azure.com:443/workflows/a488ee4e6dd34fbf85d69ff5695dceb8/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=mzFskLc897eR_sPvdtE-f6H8lVCS1H-7qdc-aUnGK8I",
							"connectVia": {
								"referenceName": "WWWEB002Production",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"Subject": "An error has occurred!",
								"ErrorMessage": "The ADF pipeline has crashed! Please check the logs.",
								"EmailTo": "Tejaswi.Datla@wineworks.co.nz"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/VWRun')]",
				"[concat(variables('factoryId'), '/datasets/Runs')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/WWWEB002Production')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Supplier for Production Runs')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Supplier for Production Runs",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "."
							},
							{
								"name": "Destination",
								"value": "activitypointer"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT\ncast(s.Id as nvarchar) [Supplier Id]\n,Cast([Active] as int)  [Status]\n,c.Name [Supplier Product Category]\n,cast(CONVERT(BINARY(16), REVERSE(CONVERT(BINARY(16),s.Id, 1000))) as uniqueidentifier) [Supplier for prod lines Id]\n,s.Description as [Supplier Name]\n\nFROM [WineWorks.Database].[companies].[Supplier] s\nINNER JOIN lookups.DryGoodsCategory c on c.Id=DryGoodsCategoryId\n",
								"partitionOption": "None"
							},
							"sink": {
								"type": "CommonDataServiceForAppsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Supplier Id",
											"type": "String"
										},
										"sink": {
											"name": "ww_supplierid",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "Int32"
										},
										"sink": {
											"name": "statecode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Supplier Product Category",
											"type": "String"
										},
										"sink": {
											"name": "ww_supplierproductcategory",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Supplier for prod lines Id",
											"type": "Guid"
										},
										"sink": {
											"name": "ww_supplierforproductionlinesid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "Supplier Name",
											"type": "String"
										},
										"sink": {
											"name": "ww_suppliername",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "WWSQL003_Portal",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataVerse_SupplierForProductionLines",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send fail email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Supplier for Production Runs",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-19.australiasoutheast.logic.azure.com:443/workflows/0ce17bbfafef48aebc2e35e531fd51c3/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=S8w7FykrvK3_j9xtr-WRVEDzc4Qcstem-MDRyDz0C9o",
							"connectVia": {
								"referenceName": "WWWEB002Production",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"Subject": "An error has occurred!",
								"ErrorMessage": "The ADF pipeline has crashed! Please check the logs.",
								"EmailTo": "Tejaswi.Datla@wineworks.co.nz"
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-02-22T03:12:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WWSQL003_Portal')]",
				"[concat(variables('factoryId'), '/datasets/DataVerse_SupplierForProductionLines')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/WWWEB002Production')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily Refresh')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Bill Of Material",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Runs",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Supplier for Production Runs",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2021-03-03T01:30:00",
						"timeZone": "New Zealand Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Bill Of Material')]",
				"[concat(variables('factoryId'), '/pipelines/Runs')]",
				"[concat(variables('factoryId'), '/pipelines/Supplier for Production Runs')]"
			]
		}
	]
}