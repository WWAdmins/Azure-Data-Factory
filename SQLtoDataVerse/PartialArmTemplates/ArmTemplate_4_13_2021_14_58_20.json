{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "SQLtoDataVerse"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Runs')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Runs",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "."
							},
							{
								"name": "Destination",
								"value": "ww_run"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "\n\nSELECT \n          bwo.Id as ProductionWorkOrderId,\n\t\t  'Bottling' workOrderType,\n          pl.id as ProductionLineId,\n          -- bwo.Active ,\n          cast(CONVERT(BINARY(16), REVERSE(CONVERT(BINARY(16),BWO.Id, 1000))) as uniqueidentifier) [Run Id],\n          cast(book.ExpectedStartDateTime as Date) as RunDate,\n          book.ProductionRunNumber,\n          cast(\nCASE when PL.ID = 1 then'95532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 2 then'98532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 3 then'99532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 4 then'9a532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 5 then'9c532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 6 then'9d532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 7 then'9e532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 8 then'9f532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 9 then'a0532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 10 then'a1532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 11 then'a2532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 12 then'a3532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 13 then'a5532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 14 then'a6532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 15 then'a7532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 16 then'a8532c19-019c-eb11-b1ac-000d3a6ae149'\n\nEND as uniqueidentifier) ProductionLine,\n          [site].Name as [Site],\n          co.Name as Client,\n\t\t  co.[WWCode] + ' - ' + co.[Name] AS [Customer ID],\n\n          co.WWCode as ClientWWCode,\n          bwo.ClientWorkOrderReference,\n          v.Name as Variety,\n          vi.Name + ' ' + v.Name VintageVariety,\n          bwo.WineVolume,\n          cast(bwo.Active as int) StateCode,\n          bwo.AdditionalInstructions,\n          bgct.Name as BottleGasCoverType,\n          bwo.CarbonationSaturation,\n          bwo.ClientBatchCode,\n          bwo.CO2ReceivalSpecification,\n          bwo.CreatedBy,\n          bwo.CreatedOn,\n          bwo.ExonetIntegrationError,\n          bwo.ExonetSalesOrderNumber,\n          bwo.LastCellarFilterDate,\n          bwo.Organic,\n          bwo.PushedToExonet,\n          bwo.PushedToExonetDate,\n          bwo.PushedToScale,\n          bwo.PushedToScaleDate,\n          bwo.RequestorName,\n          bwo.ScaleIntegrationError,\n          bwo.SO2ReceivalSpecification,\n          bwo.StartupWinemaker,\n          bwo.UpdatedBy,\n          bwo.UpdatedOn,\n          vi.Name as Vintage,\n          bft.Name as BottlingFiltrationType,\n          cft.Name as CellarFiltrationType,\n          ec.Name as ExportCertification,\n\t\t NULL AS [QuantityCases]\n,NULL [UseAllStock]\n,NULL [CaseVariability]\n,NULL  AS [FullProductName]\n,NULL  AS [PackType]\n,NULL  AS [RunLine]\n,NULL  AS [FinishedGoodsStockCode]\n,NULL  AS [StockToConsumeLotRunNo]\n,NULL as [End Market]\nFROM\n          companies.BottlingWorkOrder bwo\n          left join companies.Company co on bwo.CompanyId = co.Id\n          left join lookups.Site [site] on bwo.SiteId = [site].Id\n          left join companies.ProductionBooking book on bwo.Id = book.BottlingWorkOrderId\n          left join lookups.ProductionLine pl on book.ProductionLineId = pl.Id\n          left join lookups.Variety v on bwo.VarietyId = v.Id\n          left join lookups.Vintage vi on bwo.VintageId = vi.Id\n          left join lookups.WorkOrderStatus stat on bwo.WorkOrderStatusId = stat.Id\n          left join lookups.BottleGasCoverType bgct on bwo.BottleGasCoverTypeId = bgct.Id\n          left join companies.BottlingFiltrationType bft on bwo.BottlingFiltrationTypeId = bft.Id\n          left join companies.CellarFiltrationType cft on bwo.CellarFiltrationTypeId = cft.Id\n          left join lookups.ExportCertification ec on bwo.ExportCertificationId = ec.Id\nWHERE  cast(book.ExpectedStartDateTime as Date) > getdate() - 3\n\nUNION ALL\nSELECT  rwo.[Id] as ProductionWorkOrderId,\n 'ReWork' workOrderType,\nvwrwo.ProductionLineId\n,cast(CONVERT(BINARY(16), REVERSE(CONVERT(BINARY(16),rwo.Id, 1000))) as uniqueidentifier) [Run Id]\n,vwrwo.RunDate \n,rwo.ProductionRunNumber [ProductionRunNumber]\n,cast(\nCASE when PL.ID = 1 then'95532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 2 then'98532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 3 then'99532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 4 then'9a532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 5 then'9c532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 6 then'9d532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 7 then'9e532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 8 then'9f532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 9 then'a0532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 10 then'a1532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 11 then'a2532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 12 then'a3532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 13 then'a5532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 14 then'a6532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 15 then'a7532c19-019c-eb11-b1ac-000d3a6ae149'\n when PL.ID = 16 then'a8532c19-019c-eb11-b1ac-000d3a6ae149'\n\nEND as uniqueidentifier) ProductionLine\n,[site].Name as [Site]\n,c.[Name] AS [Client]\n,c.[WWCode] + ' - ' + c.[Name] AS [Customer ID]\n,c.[WWCode] ClientWWCode\n,rwo.[ClientWorkOrderReference] \n,V.Name as [Variety]\n,vi.Name + ' ' + v.Name VintageVariety\n,rwo.CasesToCreate*335.0 WineVolume --How to calculate from cases to create\n,cast(rwo.Active as int) StateCode\n,rwo.AdditionalInstructions\n,NULL as BottleGasCoverType,\nNULL as CarbonationSaturation,\nNULL as ClientBatchCode,\nNULL as CO2ReceivalSpecification,\nNULL as CreatedBy,\nNULL as CreatedOn,\nNULL as ExonetIntegrationError,\nNULL as ExonetSalesOrderNumber,\nNULL as LastCellarFilterDate,\nNULL as Organic,\nNULL as PushedToExonet,\nNULL as PushedToExonetDate,\nNULL as PushedToScale,\nNULL as PushedToScaleDate,\nNULL as RequestorName,\nNULL as ScaleIntegrationError,\nNULL as SO2ReceivalSpecification,\nNULL as StartupWinemaker,\nrwo.UpdatedBy,\nrwo.UpdatedOn,\nNULL as Vintage,\nNULL as BottlingFiltrationType,\nNULL as CellarFiltrationType,\nNULL as ExportCertification,\nrwo.[CasesToCreate] AS [QuantityCases]\n,rwo.[UseAllStock]\n,CASE WHEN rwo.[UseAllStock] = 0 THEN 'Exact' ELSE 'Use All Stock' END AS [CaseVariability]\n,vwbomd.[StockCodeDescription] AS [FullProductName]\n,vwbomd.[BottlesPerCarton] AS [PackType]\n,vwrwo.[ProductionLine] AS [RunLine]\n,vwbomd.[StockCode] AS [FinishedGoodsStockCode]\n,rwo.[StockToConsumeLot] AS [StockToConsumeLotRunNo]\n,M.WWCode [End Market]\n\nFROM [companies].[LabellingOrReworkOrder] rwo\nJOIN companies.[vwLabellingOrReworkOrder] vwrwo ON rwo.[Id] = vwrwo.[Id]\nINNER JOIN companies.[Company] AS c ON c.[Id] = rwo.[CompanyId]\nleft join lookups.Site [site] on rwo.SiteId = [site].Id\nleft join companies.ProductionBooking book on rwo.Id = book.LabellingOrReworkOrderId\nleft join lookups.ProductionLine pl on book.ProductionLineId = pl.Id\nleft join lookups.Variety v on book.VarietyId = v.Id\nleft join lookups.Vintage vi on book.VintageId = vi.Id\nleft join lookups.WorkOrderStatus stat on vwrwo.WorkOrderStatusId = stat.Id\nINNER JOIN companies.[vwBillOfMaterialDetail] vwbomd ON rwo.[StockToCreateId] = vwbomd.[Id]\njoin lookups.Market M on M.Id=MarketId \nwhere cast(book.ExpectedStartDateTime as Date) > getdate() - 3",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "CommonDataServiceForAppsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "StateCode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "statecode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Client",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_clientname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ClientWorkOrderReference",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_clientworkorderreference",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RunDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "ww_rundate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Run Id",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "ww_runid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "ProductionRunNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_runnumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ProductionLine",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "ww_runproductionline",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "Variety",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_variety",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Vintage",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_vintage",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VintageVariety",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ww_vintagevariety",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ProductionWorkOrderId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ww_workorderid",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "workOrderType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ww_workordertype",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WWSQL003_Portal",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Runs",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Send fail email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Runs",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-31.australiasoutheast.logic.azure.com:443/workflows/a488ee4e6dd34fbf85d69ff5695dceb8/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=mzFskLc897eR_sPvdtE-f6H8lVCS1H-7qdc-aUnGK8I",
							"connectVia": {
								"referenceName": "WWWEB002Production",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"Subject": "An error has occurred!",
								"ErrorMessage": "The ADF pipeline has crashed! Please check the logs.",
								"EmailTo": "Tejaswi.Datla@wineworks.co.nz"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		}
	]
}