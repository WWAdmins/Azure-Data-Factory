{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DataVerseToSQL"
		},
		"DataNow_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DataNow'"
		},
		"EskerFTPWW_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'EskerFTPWW'"
		},
		"FileServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'FileServer1'"
		},
		"WWSQL003_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'WWSQL003'",
			"defaultValue": "integrated security=True;Data Source=WWSQL003;Initial Catalog=Dataverse.Staging;trusted_connection=True"
		},
		"WWSQL003_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'WWSQL003'"
		},
		"WWSQL003_DV_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'WWSQL003_DV'",
			"defaultValue": "integrated security=True;Data Source=wwsql003;Initial Catalog=DataVerse"
		},
		"WWSQL003_DV_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'WWSQL003_DV'"
		},
		"WWWEB002_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'WWWEB002'",
			"defaultValue": "integrated security=True;Data Source=portal_data.wineworks.co.nz;Initial Catalog=wineworks.Database;trusted_connection=True"
		},
		"WWWEB002_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'WWWEB002'"
		},
		"DataNow_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "WWSQL003"
		},
		"DataNow_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "DataNow"
		},
		"DataNow_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "wineworksgroup\\WWG_Service"
		},
		"EskerFTPWW_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\WWMULTI001\\Esker"
		},
		"EskerFTPWW_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "wwdigital@wineworks.co.nz"
		},
		"FileServer1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\WWMULTI001\\Indevin"
		},
		"FileServer1_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "wwdigital@wineworks.co.nz"
		},
		"WWSQL003_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "wwdigital02@wineworks.co.nz"
		},
		"WWSQL003_DV_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "wineworksgroup\\WWG_Service"
		},
		"WWWEB002_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "wineworksgroup\\WWG_Service"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Stockcheckinentry')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dataverse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CommonDataServiceForAppsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "ww_stockcheckinentry"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SupervisorSignoff')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dataverse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CommonDataServiceForAppsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "ww_supervisorsignoff"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SupervisorSignoffBOM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dataverse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CommonDataServiceForAppsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "ww_supervisorsignoffbom"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SupervisorSignoffbomhourlycheck')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dataverse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CommonDataServiceForAppsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "ww_supervisorsignoffbomhourlycheck"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tanker')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dataverse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CommonDataServiceForAppsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "ww_tanker"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/User')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dataverse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CommonDataServiceForAppsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "systemuser"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Winery')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dataverse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CommonDataServiceForAppsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "ww_winery"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lockcode')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dataverse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CommonDataServiceForAppsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "ww_lockcode"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataNow')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('DataNow_properties_typeProperties_server')]",
					"database": "[parameters('DataNow_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "Windows",
					"userName": "[parameters('DataNow_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DataNow_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EskerFTPWW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('EskerFTPWW_properties_typeProperties_host')]",
					"userId": "[parameters('EskerFTPWW_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('EskerFTPWW_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileServer1_properties_typeProperties_host')]",
					"userId": "[parameters('FileServer1_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FileServer1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WWSQL003')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('WWSQL003_connectionString')]",
					"userName": "[parameters('WWSQL003_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('WWSQL003_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WWSQL003_DV')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('WWSQL003_DV_connectionString')]",
					"userName": "[parameters('WWSQL003_DV_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('WWSQL003_DV_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WWWEB002')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('WWWEB002_connectionString')]",
					"userName": "[parameters('WWWEB002_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('WWWEB002_password')]"
					}
				},
				"connectVia": {
					"referenceName": "ProductionLink",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/G2 Dataverse to Databricks RunStartEndsTEST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IsNewData",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CommonDataServiceForAppsSource",
								"query": {
									"value": "@concat('<fetch><entity name=\"crc5d_runstartend\"><all-attributes/><filter type=\"and\"><condition attribute=\"modifiedon\" operator=\"on-or-after\" value=\"',pipeline().parameters.triggerStart,'\"/><condition attribute=\"modifiedon\" operator=\"on-or-before\" value=\"',pipeline().parameters.triggerEnd,'\"/></filter></entity></fetch>')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "RunStartEndsProd",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "IsNewData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('IsNewData').output, 'firstRow')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Get RunStartEnds",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "CommonDataServiceForAppsSource",
											"query": {
												"value": "@concat('<fetch><entity name=\"crc5d_runstartend\"><all-attributes/><filter type=\"and\"><condition attribute=\"modifiedon\" operator=\"on-or-after\" value=\"',pipeline().parameters.triggerStart,'\"/><condition attribute=\"modifiedon\" operator=\"on-or-before\" value=\"',pipeline().parameters.triggerEnd,'\"/></filter></entity></fetch>')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "crc5d_productionlineid",
														"type": "Int32"
													},
													"sink": {
														"name": "crc5d_productionlineid",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "owningbusinessunit",
														"type": "Guid"
													},
													"sink": {
														"name": "owningbusinessunit",
														"type": "Guid"
													}
												},
												{
													"source": {
														"name": "statecode",
														"type": "Int32"
													},
													"sink": {
														"name": "statecode",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "crc5d_runstartendid",
														"type": "Guid"
													},
													"sink": {
														"name": "crc5d_runstartendid",
														"type": "Guid"
													}
												},
												{
													"source": {
														"name": "createdby",
														"type": "Guid"
													},
													"sink": {
														"name": "createdby",
														"type": "Guid"
													}
												},
												{
													"source": {
														"name": "crc5d_uniqueid",
														"type": "String"
													},
													"sink": {
														"name": "crc5d_uniqueid",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "crc5d_enddatetime",
														"type": "DateTime"
													},
													"sink": {
														"name": "crc5d_enddatetime",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "timezoneruleversionnumber",
														"type": "Int32"
													},
													"sink": {
														"name": "timezoneruleversionnumber",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "ownerid",
														"type": "Guid"
													},
													"sink": {
														"name": "ownerid",
														"type": "Guid"
													}
												},
												{
													"source": {
														"name": "modifiedon",
														"type": "DateTime"
													},
													"sink": {
														"name": "modifiedon",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "modifiedby",
														"type": "Guid"
													},
													"sink": {
														"name": "modifiedby",
														"type": "Guid"
													}
												},
												{
													"source": {
														"name": "owninguser",
														"type": "Guid"
													},
													"sink": {
														"name": "owninguser",
														"type": "Guid"
													}
												},
												{
													"source": {
														"name": "crc5d_runstartend",
														"type": "String"
													},
													"sink": {
														"name": "crc5d_runstartend",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "createdon",
														"type": "DateTime"
													},
													"sink": {
														"name": "createdon",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "statuscode",
														"type": "Int32"
													},
													"sink": {
														"name": "statuscode",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "crc5d_startdatetime",
														"type": "DateTime"
													},
													"sink": {
														"name": "crc5d_startdatetime",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "crc5d_lastpallettime",
														"type": "DateTime"
													},
													"sink": {
														"name": "crc5d_lastpallettime",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "crc5d_lastpalletid",
														"type": "String"
													},
													"sink": {
														"name": "crc5d_lastpalletid",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "RunStartEndsProd",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_RunStartEndTEST",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "bronze-silver-gold",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Get RunStartEnds",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/databricks-sp-iot-test/adb-iot/ETL/azure-data-factory/dataverse-bronze-silver-gold",
										"baseParameters": {
											"END_TIMESTAMP": {
												"value": "@pipeline().parameters.triggerEnd",
												"type": "Expression"
											},
											"MODIFIEDON_COLUMN": {
												"value": "@pipeline().parameters.modifiedonColumn",
												"type": "Expression"
											},
											"PARTITION_COLUMN": {
												"value": "@pipeline().parameters.partitionColumn",
												"type": "Expression"
											},
											"TABLE_NAME": {
												"value": "@pipeline().parameters.tableName",
												"type": "Expression"
											},
											"SECONDARY_PARTITION": {
												"value": "@pipeline().parameters.partitionBySecondary",
												"type": "Expression"
											},
											"SECONDARY_PARTITION_NAME": {
												"value": "@pipeline().parameters.secondaryPartitionColumnName",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "adb_iot_test",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "run_durations_trigger",
									"type": "DatabricksNotebook",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [
										{
											"activity": "bronze-silver-gold",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/databricks-sp-iot-test/adb-iot/BI/triggers/run_duration_trigger"
									},
									"linkedServiceName": {
										"referenceName": "adb_iot_test",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"triggerStart": {
						"type": "string"
					},
					"triggerEnd": {
						"type": "string"
					},
					"modifiedonColumn": {
						"type": "string",
						"defaultValue": "modifiedon"
					},
					"partitionColumn": {
						"type": "string",
						"defaultValue": "crc5d_runstartend"
					},
					"tableName": {
						"type": "string",
						"defaultValue": "crc5d_runstartend"
					},
					"partitionBySecondary": {
						"type": "string",
						"defaultValue": "false"
					},
					"secondaryPartitionColumnName": {
						"type": "string",
						"defaultValue": "false"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/G2 Dataverse to Databricks UsersTEST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IsNewData",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CommonDataServiceForAppsSource",
								"query": {
									"value": "@concat('<fetch><entity name=\"systemuser\"><all-attributes/><filter type=\"and\"><condition attribute=\"modifiedon\" operator=\"ge\" value=\"',pipeline().parameters.triggerStart,'\"/><condition attribute=\"modifiedon\" operator=\"le\" value=\"',pipeline().parameters.triggerEnd,'\"/></filter></entity></fetch>')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "User",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "IsNewData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('IsNewData').output, 'firstRow')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Get Users",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "CommonDataServiceForAppsSource",
											"query": {
												"value": "@concat('<fetch><entity name=\"systemuser\"><all-attributes/><filter type=\"and\"><condition attribute=\"modifiedon\" operator=\"ge\" value=\"',pipeline().parameters.triggerStart,'\"/><condition attribute=\"modifiedon\" operator=\"le\" value=\"',pipeline().parameters.triggerEnd,'\"/></filter></entity></fetch>')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "User",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_UserTEST",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "bronze-silver-gold",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Get Users",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/databricks-sp-iot-test/adb-iot/ETL/azure-data-factory/dataverse-bronze-silver-gold",
										"baseParameters": {
											"END_TIMESTAMP": {
												"value": "@pipeline().parameters.triggerEnd",
												"type": "Expression"
											},
											"MODIFIEDON_COLUMN": {
												"value": "@pipeline().parameters.modifiedonColumn",
												"type": "Expression"
											},
											"PARTITION_COLUMN": {
												"value": "@pipeline().parameters.partitionColumn",
												"type": "Expression"
											},
											"TABLE_NAME": {
												"value": "@pipeline().parameters.tableName",
												"type": "Expression"
											},
											"SECONDARY_PARTITION": {
												"value": "@pipeline().parameters.partitionBySecondary",
												"type": "Expression"
											},
											"SECONDARY_PARTITION_NAME": {
												"value": "@pipeline().parameters.secondaryPartitionColumnName",
												"type": "Expression"
											},
											"DROP_DATAVERSE_DEFAULTS": {
												"value": "@pipeline().parameters.dropDataverseDefaults",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "adb_iot_test",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"triggerStart": {
						"type": "string"
					},
					"triggerEnd": {
						"type": "string"
					},
					"modifiedonColumn": {
						"type": "string",
						"defaultValue": "modifiedon"
					},
					"partitionColumn": {
						"type": "string",
						"defaultValue": "systemuserid"
					},
					"tableName": {
						"type": "string",
						"defaultValue": "systemuser"
					},
					"partitionBySecondary": {
						"type": "string",
						"defaultValue": "false"
					},
					"secondaryPartitionColumnName": {
						"type": "string",
						"defaultValue": "false"
					},
					"dropDataverseDefaults": {
						"type": "string",
						"defaultValue": "false"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/User')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/G2 Dataverse to DatabricksTEST BOMS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IsNewData",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CommonDataServiceForAppsSource",
								"query": {
									"value": "@concat('<fetch><entity name=\"ww_billofmaterials\"><all-attributes/><filter type=\"and\"><condition attribute=\"modifiedon\" operator=\"ge\" value=\"',pipeline().parameters.triggerStart,'\"/><condition attribute=\"modifiedon\" operator=\"le\" value=\"',pipeline().parameters.triggerEnd,'\"/></filter></entity></fetch>')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "BOM",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition BOMS",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "IsNewData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('IsNewData').output, 'firstRow')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "BOM_copy",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "CommonDataServiceForAppsSource",
											"query": {
												"value": "@concat('<fetch><entity name=\"ww_billofmaterials\"><all-attributes/><filter type=\"and\"><condition attribute=\"modifiedon\" operator=\"ge\" value=\"',pipeline().parameters.triggerStart,'\"/><condition attribute=\"modifiedon\" operator=\"le\" value=\"',pipeline().parameters.triggerEnd,'\"/></filter></entity></fetch>')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "BOM",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_IOT_TEST_ww_billofmaterials",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "bronze-silver-gold_copy",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "BOM_copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/databricks-sp-iot-test/adb-iot/ETL/azure-data-factory/dataverse-bronze-silver-gold",
										"baseParameters": {
											"END_TIMESTAMP": {
												"value": "@pipeline().parameters.triggerEnd",
												"type": "Expression"
											},
											"MODIFIEDON_COLUMN": {
												"value": "@pipeline().parameters.modifiedonColumn",
												"type": "Expression"
											},
											"PARTITION_COLUMN": {
												"value": "@pipeline().parameters.partitionColumn",
												"type": "Expression"
											},
											"TABLE_NAME": {
												"value": "@pipeline().parameters.tableName",
												"type": "Expression"
											},
											"SECONDARY_PARTITION": {
												"value": "@pipeline().parameters.partitionBySecondary",
												"type": "Expression"
											},
											"SECONDARY_PARTITION_NAME": {
												"value": "@pipeline().parameters.secondaryPartitionColumnName",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "adb_iot_test",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"triggerStart": {
						"type": "string"
					},
					"triggerEnd": {
						"type": "string"
					},
					"modifiedonColumn": {
						"type": "string",
						"defaultValue": "modifiedon"
					},
					"partitionColumn": {
						"type": "string",
						"defaultValue": "ww_billofmaterialsid"
					},
					"tableName": {
						"type": "string",
						"defaultValue": "ww_billofmaterials"
					},
					"partitionBySecondary": {
						"type": "string",
						"defaultValue": "false"
					},
					"secondaryPartitionColumnName": {
						"type": "string",
						"defaultValue": "false"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/G2 Dataverse to DatabricksTEST Downtimes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IsNewData",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CommonDataServiceForAppsSource",
								"query": {
									"value": "@concat('<fetch><entity name=\"crc5d_newtable\"><all-attributes/><filter type=\"and\"><condition attribute=\"modifiedon\" operator=\"ge\" value=\"',pipeline().parameters.triggerStart,'\"/><condition attribute=\"modifiedon\" operator=\"le\" value=\"',pipeline().parameters.triggerEnd,'\"/></filter></entity></fetch>')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DowntimesProd",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition Downtimes",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "IsNewData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('IsNewData').output, 'firstRow')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Downtimes_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "CommonDataServiceForAppsSource",
											"query": {
												"value": "@concat('<fetch><entity name=\"crc5d_newtable\"><all-attributes/><filter type=\"and\"><condition attribute=\"modifiedon\" operator=\"ge\" value=\"',pipeline().parameters.triggerStart,'\"/><condition attribute=\"modifiedon\" operator=\"le\" value=\"',pipeline().parameters.triggerEnd,'\"/></filter></entity></fetch>')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DowntimesProd",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DowntimeTEST",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "bronze-silver-gold_copy1",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Downtimes_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/databricks-sp-iot-test/adb-iot/ETL/azure-data-factory/dataverse-bronze-silver-gold",
										"baseParameters": {
											"END_TIMESTAMP": {
												"value": "@pipeline().parameters.triggerEnd",
												"type": "Expression"
											},
											"MODIFIEDON_COLUMN": {
												"value": "@pipeline().parameters.modifiedonColumn",
												"type": "Expression"
											},
											"PARTITION_COLUMN": {
												"value": "@pipeline().parameters.partitionColumn",
												"type": "Expression"
											},
											"TABLE_NAME": {
												"value": "@pipeline().parameters.tableName",
												"type": "Expression"
											},
											"SECONDARY_PARTITION": {
												"value": "@pipeline().parameters.partitionBySecondary",
												"type": "Expression"
											},
											"SECONDARY_PARTITION_NAME": {
												"value": "@pipeline().parameters.secondaryPartitionColumnName",
												"type": "Expression"
											},
											"DROP_DATAVERSE_DEFAULTS": {
												"value": "@pipeline().parameters.dropDataverseDefaults",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "adb_iot_test",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "oee-trigger_copy1",
									"type": "DatabricksNotebook",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [
										{
											"activity": "bronze-silver-gold_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/databricks-sp-iot-test/adb-iot/BI/triggers/oee_interval_trigger"
									},
									"linkedServiceName": {
										"referenceName": "adb_iot_test",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"triggerStart": {
						"type": "string"
					},
					"triggerEnd": {
						"type": "string"
					},
					"modifiedonColumn": {
						"type": "string",
						"defaultValue": "modifiedon"
					},
					"partitionColumn": {
						"type": "string",
						"defaultValue": "crc5d_newtableid"
					},
					"tableName": {
						"type": "string",
						"defaultValue": "crc5d_newtable"
					},
					"partitionBySecondary": {
						"type": "string",
						"defaultValue": "false"
					},
					"secondaryPartitionColumnName": {
						"type": "string",
						"defaultValue": "false"
					},
					"dropDataverseDefaults": {
						"type": "string",
						"defaultValue": "false"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/G2 Dataverse to DatabricksTEST Run')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IsNewData",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CommonDataServiceForAppsSource",
								"query": {
									"value": "@concat('<fetch><entity name=\"ww_run\"><all-attributes/><filter type=\"and\"><condition attribute=\"modifiedon\" operator=\"ge\" value=\"',pipeline().parameters.triggerStart,'\"/><condition attribute=\"modifiedon\" operator=\"le\" value=\"',pipeline().parameters.triggerEnd,'\"/></filter></entity></fetch>')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "Run",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "IsNewData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('IsNewData').output, 'firstRow')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Run copy",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "CommonDataServiceForAppsSource",
											"query": {
												"value": "@concat('<fetch><entity name=\"ww_run\"><all-attributes/><filter type=\"and\"><condition attribute=\"modifiedon\" operator=\"ge\" value=\"',pipeline().parameters.triggerStart,'\"/><condition attribute=\"modifiedon\" operator=\"le\" value=\"',pipeline().parameters.triggerEnd,'\"/></filter></entity></fetch>')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Run",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_IOT_TEST_ww_run",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "bronze-silver-gold_copy",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Run copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/databricks-sp-iot-test/adb-iot/ETL/azure-data-factory/dataverse-bronze-silver-gold",
										"baseParameters": {
											"END_TIMESTAMP": {
												"value": "@pipeline().parameters.triggerEnd",
												"type": "Expression"
											},
											"MODIFIEDON_COLUMN": {
												"value": "@pipeline().parameters.modifiedonColumn",
												"type": "Expression"
											},
											"PARTITION_COLUMN": {
												"value": "@pipeline().parameters.partitionColumn",
												"type": "Expression"
											},
											"TABLE_NAME": {
												"value": "@pipeline().parameters.tableName",
												"type": "Expression"
											},
											"SECONDARY_PARTITION": {
												"value": "@pipeline().parameters.partitionBySecondary",
												"type": "Expression"
											},
											"SECONDARY_PARTITION_NAME": {
												"value": "@pipeline().parameters.secondaryPartitionColumnName",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "adb_iot_test",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"triggerStart": {
						"type": "string"
					},
					"triggerEnd": {
						"type": "string"
					},
					"modifiedonColumn": {
						"type": "string",
						"defaultValue": "modifiedon"
					},
					"partitionColumn": {
						"type": "string",
						"defaultValue": "ww_runid"
					},
					"tableName": {
						"type": "string",
						"defaultValue": "ww_run"
					},
					"partitionBySecondary": {
						"type": "string",
						"defaultValue": "false"
					},
					"secondaryPartitionColumnName": {
						"type": "string",
						"defaultValue": "false"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PROD Databricks Downtimes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IsNewData",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CommonDataServiceForAppsSource",
								"query": {
									"value": "@concat('<fetch><entity name=\"crc5d_newtable\"><all-attributes/><filter type=\"and\"><condition attribute=\"modifiedon\" operator=\"ge\" value=\"',pipeline().parameters.triggerStart,'\"/><condition attribute=\"modifiedon\" operator=\"le\" value=\"',pipeline().parameters.triggerEnd,'\"/></filter></entity></fetch>')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DowntimesProd",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition Downtimes",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "IsNewData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('IsNewData').output, 'firstRow')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Downtimes_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "CommonDataServiceForAppsSource",
											"query": {
												"value": "@concat('<fetch><entity name=\"crc5d_newtable\"><all-attributes/><filter type=\"and\"><condition attribute=\"modifiedon\" operator=\"ge\" value=\"',pipeline().parameters.triggerStart,'\"/><condition attribute=\"modifiedon\" operator=\"le\" value=\"',pipeline().parameters.triggerEnd,'\"/></filter></entity></fetch>')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DowntimesProd",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DowntimePROD",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "bronze-silver-gold_copy1",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Downtimes_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/databricks-sp-iot-prod/adb-iot/ETL/azure-data-factory/dataverse-bronze-silver-gold",
										"baseParameters": {
											"DROP_DATAVERSE_DEFAULTS": {
												"value": "@pipeline().parameters.dropDataverseDefaults",
												"type": "Expression"
											},
											"MODIFIEDON_COLUMN": {
												"value": "@pipeline().parameters.modifiedonColumn",
												"type": "Expression"
											},
											"PARTITION_COLUMN": {
												"value": "@pipeline().parameters.partitionColumn",
												"type": "Expression"
											},
											"TABLE_NAME": {
												"value": "@pipeline().parameters.tableName",
												"type": "Expression"
											},
											"SECONDARY_PARTITION": {
												"value": "@pipeline().parameters.partitionBySecondary",
												"type": "Expression"
											},
											"SECONDARY_PARTITION_NAME": {
												"value": "@pipeline().parameters.secondaryPartitionColumnName",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "adb_iot_prod",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "oee-trigger_copy1",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "bronze-silver-gold_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/databricks-sp-iot-prod/adb-iot/BI/triggers/oee_interval_trigger"
									},
									"linkedServiceName": {
										"referenceName": "adb_iot_prod",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"triggerStart": {
						"type": "string"
					},
					"triggerEnd": {
						"type": "string"
					},
					"modifiedonColumn": {
						"type": "string",
						"defaultValue": "modifiedon"
					},
					"partitionColumn": {
						"type": "string",
						"defaultValue": "crc5d_newtableid"
					},
					"tableName": {
						"type": "string",
						"defaultValue": "crc5d_newtable"
					},
					"partitionBySecondary": {
						"type": "string",
						"defaultValue": "false"
					},
					"secondaryPartitionColumnName": {
						"type": "string",
						"defaultValue": "false"
					},
					"dropDataverseDefaults": {
						"type": "string",
						"defaultValue": "false"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}