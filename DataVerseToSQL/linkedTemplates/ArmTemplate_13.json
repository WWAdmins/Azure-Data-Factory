{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DataVerseToSQL"
		},
		"prod-databricks-downtimes-30mins_properties_pipeline_parameters_triggerStart": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"prod-databricks-downtimes-30mins_properties_pipeline_parameters_triggerEnd": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		},
		"prod-databricks-downtimes-30mins_properties_pipeline_parameters_modifiedonColumn": {
			"type": "string",
			"defaultValue": "modifiedon"
		},
		"prod-databricks-downtimes-30mins_properties_pipeline_parameters_partitionColumn": {
			"type": "string",
			"defaultValue": "crc5d_newtableid"
		},
		"prod-databricks-downtimes-30mins_properties_pipeline_parameters_tableName": {
			"type": "string",
			"defaultValue": "crc5d_newtable"
		},
		"prod-databricks-downtimes-30mins_properties_pipeline_parameters_partitionBySecondary": {
			"type": "string",
			"defaultValue": "false"
		},
		"prod-databricks-downtimes-30mins_properties_pipeline_parameters_secondaryPartitionColumnName": {
			"type": "string",
			"defaultValue": "false"
		},
		"prod-databricks-downtimes-30mins_properties_pipeline_parameters_dropDataverseDefaults": {
			"type": "string",
			"defaultValue": "false"
		},
		"prod-databricks-runstartends-30mins_properties_pipeline_parameters_triggerStart": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"prod-databricks-runstartends-30mins_properties_pipeline_parameters_triggerEnd": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		},
		"prod-databricks-runstartends-30mins_properties_pipeline_parameters_modifiedonColumn": {
			"type": "string",
			"defaultValue": "modifiedon"
		},
		"prod-databricks-runstartends-30mins_properties_pipeline_parameters_partitionColumn": {
			"type": "string",
			"defaultValue": "crc5d_runstartendid"
		},
		"prod-databricks-runstartends-30mins_properties_pipeline_parameters_tableName": {
			"type": "string",
			"defaultValue": "crc5d_runstartend"
		},
		"prod-databricks-runstartends-30mins_properties_pipeline_parameters_partitionBySecondary": {
			"type": "string",
			"defaultValue": "false"
		},
		"prod-databricks-runstartends-30mins_properties_pipeline_parameters_secondaryPartitionColumnName": {
			"type": "string",
			"defaultValue": "false"
		},
		"prod-databricks-systemuser-1day_properties_pipeline_parameters_triggerStart": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"prod-databricks-systemuser-1day_properties_pipeline_parameters_triggerEnd": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		},
		"prod-databricks-systemuser-1day_properties_pipeline_parameters_modifiedonColumn": {
			"type": "string",
			"defaultValue": "modifiedon"
		},
		"prod-databricks-systemuser-1day_properties_pipeline_parameters_partitionColumn": {
			"type": "string",
			"defaultValue": "systemuserid"
		},
		"prod-databricks-systemuser-1day_properties_pipeline_parameters_tableName": {
			"type": "string",
			"defaultValue": "systemuser"
		},
		"prod-databricks-systemuser-1day_properties_pipeline_parameters_partitionBySecondary": {
			"type": "string",
			"defaultValue": "false"
		},
		"prod-databricks-systemuser-1day_properties_pipeline_parameters_secondaryPartitionColumnName": {
			"type": "string",
			"defaultValue": "false"
		},
		"prod-databricks-systemuser-1day_properties_pipeline_parameters_dropDataverseDefaults": {
			"type": "string",
			"defaultValue": "false"
		},
		"prod-databricks-ww_billofmaterials-1hour_properties_pipeline_parameters_triggerStart": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"prod-databricks-ww_billofmaterials-1hour_properties_pipeline_parameters_triggerEnd": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		},
		"prod-databricks-ww_billofmaterials-1hour_properties_pipeline_parameters_modifiedonColumn": {
			"type": "string",
			"defaultValue": "modifiedon"
		},
		"prod-databricks-ww_billofmaterials-1hour_properties_pipeline_parameters_partitionColumn": {
			"type": "string",
			"defaultValue": "ww_billofmaterialsid"
		},
		"prod-databricks-ww_billofmaterials-1hour_properties_pipeline_parameters_tableName": {
			"type": "string",
			"defaultValue": "ww_billofmaterials"
		},
		"prod-databricks-ww_billofmaterials-1hour_properties_pipeline_parameters_partitionBySecondary": {
			"type": "string",
			"defaultValue": "false"
		},
		"prod-databricks-ww_billofmaterials-1hour_properties_pipeline_parameters_secondaryPartitionColumnName": {
			"type": "string",
			"defaultValue": "false"
		},
		"prod-databricks-ww_run-1hour_properties_pipeline_parameters_triggerStart": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"prod-databricks-ww_run-1hour_properties_pipeline_parameters_triggerEnd": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		},
		"prod-databricks-ww_run-1hour_properties_pipeline_parameters_modifiedonColumn": {
			"type": "string",
			"defaultValue": "modifiedon"
		},
		"prod-databricks-ww_run-1hour_properties_pipeline_parameters_partitionColumn": {
			"type": "string",
			"defaultValue": "ww_runid"
		},
		"prod-databricks-ww_run-1hour_properties_pipeline_parameters_tableName": {
			"type": "string",
			"defaultValue": "ww_run"
		},
		"prod-databricks-ww_run-1hour_properties_pipeline_parameters_partitionBySecondary": {
			"type": "string",
			"defaultValue": "false"
		},
		"prod-databricks-ww_run-1hour_properties_pipeline_parameters_secondaryPartitionColumnName": {
			"type": "string",
			"defaultValue": "false"
		},
		"test-databricks-downtimes-1day_properties_pipeline_parameters_triggerStart": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"test-databricks-downtimes-1day_properties_pipeline_parameters_triggerEnd": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		},
		"test-databricks-downtimes-1day_properties_pipeline_parameters_modifiedonColumn": {
			"type": "string",
			"defaultValue": "modifiedon"
		},
		"test-databricks-downtimes-1day_properties_pipeline_parameters_partitionColumn": {
			"type": "string",
			"defaultValue": "crc5d_newtableid"
		},
		"test-databricks-downtimes-1day_properties_pipeline_parameters_tableName": {
			"type": "string",
			"defaultValue": "crc5d_newtable"
		},
		"test-databricks-downtimes-1day_properties_pipeline_parameters_partitionBySecondary": {
			"type": "string",
			"defaultValue": "false"
		},
		"test-databricks-downtimes-1day_properties_pipeline_parameters_secondaryPartitionColumnName": {
			"type": "string",
			"defaultValue": "false"
		},
		"test-databricks-downtimes-1day_properties_pipeline_parameters_dropDataverseDefaults": {
			"type": "string",
			"defaultValue": "false"
		},
		"test-databricks-runstartends-1day_properties_pipeline_parameters_triggerStart": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"test-databricks-runstartends-1day_properties_pipeline_parameters_triggerEnd": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		},
		"test-databricks-runstartends-1day_properties_pipeline_parameters_modifiedonColumn": {
			"type": "string",
			"defaultValue": "modifiedon"
		},
		"test-databricks-runstartends-1day_properties_pipeline_parameters_partitionColumn": {
			"type": "string",
			"defaultValue": "crc5d_runstartendid"
		},
		"test-databricks-runstartends-1day_properties_pipeline_parameters_tableName": {
			"type": "string",
			"defaultValue": "crc5d_runstartend"
		},
		"test-databricks-runstartends-1day_properties_pipeline_parameters_partitionBySecondary": {
			"type": "string",
			"defaultValue": "false"
		},
		"test-databricks-runstartends-1day_properties_pipeline_parameters_secondaryPartitionColumnName": {
			"type": "string",
			"defaultValue": "false"
		},
		"test-databricks-ww_billofmaterials-1day_properties_pipeline_parameters_triggerStart": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"test-databricks-ww_billofmaterials-1day_properties_pipeline_parameters_triggerEnd": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		},
		"test-databricks-ww_billofmaterials-1day_properties_pipeline_parameters_modifiedonColumn": {
			"type": "string",
			"defaultValue": "modifiedon"
		},
		"test-databricks-ww_billofmaterials-1day_properties_pipeline_parameters_partitionColumn": {
			"type": "string",
			"defaultValue": "ww_billofmaterialsid"
		},
		"test-databricks-ww_billofmaterials-1day_properties_pipeline_parameters_tableName": {
			"type": "string",
			"defaultValue": "ww_billofmaterials"
		},
		"test-databricks-ww_billofmaterials-1day_properties_pipeline_parameters_partitionBySecondary": {
			"type": "string",
			"defaultValue": "false"
		},
		"test-databricks-ww_billofmaterials-1day_properties_pipeline_parameters_secondaryPartitionColumnName": {
			"type": "string",
			"defaultValue": "false"
		},
		"test-databricks-ww_run-1day_properties_pipeline_parameters_triggerStart": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"test-databricks-ww_run-1day_properties_pipeline_parameters_triggerEnd": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		},
		"test-databricks-ww_run-1day_properties_pipeline_parameters_modifiedonColumn": {
			"type": "string",
			"defaultValue": "modifiedon"
		},
		"test-databricks-ww_run-1day_properties_pipeline_parameters_partitionColumn": {
			"type": "string",
			"defaultValue": "ww_runid"
		},
		"test-databricks-ww_run-1day_properties_pipeline_parameters_tableName": {
			"type": "string",
			"defaultValue": "ww_run"
		},
		"test-databricks-ww_run-1day_properties_pipeline_parameters_partitionBySecondary": {
			"type": "string",
			"defaultValue": "false"
		},
		"test-databricks-ww_run-1day_properties_pipeline_parameters_secondaryPartitionColumnName": {
			"type": "string",
			"defaultValue": "false"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ww_supervisorsignoffbomhourlycheck')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Supervisor Signoff BOM Hourly Check",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Last modifiedon",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CommonDataServiceForAppsSource",
								"query": {
									"value": "<fetch xmlns:generator=\"MarkMpn.SQL4CDS\">\n  <entity name=\"ww_supervisorsignoffbomhourlycheck\">\n    <all-attributes />\n    <filter type=\"and\">\n      \n      <condition attribute=\"ww_billofmaterials\" operator=\"not-null\" />\n     \n      <condition attribute=\"modifiedon\" operator=\"gt\" value=\"@{activity('Last modifiedon').output.firstRow.last_modifiedon}\" />\n    </filter>\n  </entity>\n</fetch>\n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ww_SupervisorSignoffBOMHourlyCheckId"
									]
								},
								"sqlWriterUseTableLock": true
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "createdon",
											"type": "DateTime"
										},
										"sink": {
											"name": "createdon",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "modifiedon",
											"type": "DateTime"
										},
										"sink": {
											"name": "modifiedon",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "statuscode",
											"type": "Int32"
										},
										"sink": {
											"name": "statuscode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ww_allknivesbladesandscissorslabelled",
											"type": "Int32"
										},
										"sink": {
											"name": "ww_Allknivesbladesandscissorslabelled",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ww_allrinserjetsworkingccp1100",
											"type": "Int32"
										},
										"sink": {
											"name": "ww_AllrinserjetsworkingCCP1100",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ww_anybrokenglassinthemachines",
											"type": "Int32"
										},
										"sink": {
											"name": "ww_Anybrokenglassinthemachines",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ww_billofmaterials",
											"type": "Guid"
										},
										"sink": {
											"name": "ww_BillofMaterials",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "ww_bottlelasercode",
											"type": "String"
										},
										"sink": {
											"name": "ww_Bottlelasercode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ww_bottlesincartongluestriplabelsandprintco",
											"type": "Int32"
										},
										"sink": {
											"name": "ww_BottlesincartonGluestripLabelsandPrintco",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ww_comments",
											"type": "String"
										},
										"sink": {
											"name": "ww_Comments",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ww_correctlabelheightandgaps",
											"type": "Int32"
										},
										"sink": {
											"name": "ww_Correctlabelheightandgaps",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ww_deleteline",
											"type": "Boolean"
										},
										"sink": {
											"name": "ww_deleteline",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "ww_depalbottlerecordfilledoutcorrectly",
											"type": "Int32"
										},
										"sink": {
											"name": "ww_Depalbottlerecordfilledoutcorrectly",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ww_fillerrecordfilledoutcorrectly",
											"type": "Int32"
										},
										"sink": {
											"name": "ww_Fillerrecordfilledoutcorrectly",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ww_labelinkjetcode",
											"type": "String"
										},
										"sink": {
											"name": "ww_Labelinkjetcode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ww_labellerrecordfilledoutcorrectly",
											"type": "Int32"
										},
										"sink": {
											"name": "ww_Labellerrecordfilledoutcorrectly",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ww_operatorcode",
											"type": "Int32"
										},
										"sink": {
											"name": "ww_OperatorCode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ww_pallettypestackingpatternslipsheetandwrap",
											"type": "Int32"
										},
										"sink": {
											"name": "ww_PallettypeStackingpatternSlipsheetandwrap",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ww_ppewornnoeatingdrinkingchewinggum",
											"type": "Int32"
										},
										"sink": {
											"name": "ww_PPEwornnoeatingdrinkingchewinggum",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ww_productionline",
											"type": "Int32"
										},
										"sink": {
											"name": "ww_Productionline",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ww_Reasonfordeletion",
											"type": "String"
										},
										"sink": {
											"name": "ww_Reasonfordeletion",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ww_screwcapperclearanceccp2inspec2530mm",
											"type": "Int32"
										},
										"sink": {
											"name": "ww_ScrewcapperclearanceCCP2inspec2530mm",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ww_supervisorsignoffbomhourlycheckid",
											"type": "Guid"
										},
										"sink": {
											"name": "ww_SupervisorSignoffBOMHourlyCheckId",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "ww_supervisorsignoffhourlychecknae",
											"type": "String"
										},
										"sink": {
											"name": "ww_SupervisorSignoffHourlyCheckNae",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ww_timeofcheck",
											"type": "DateTime"
										},
										"sink": {
											"name": "ww_Timeofcheck",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SupervisorSignoffbomhourlycheck",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwsql003_ww_supervisorsignoffbomhourlycheck",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Merge Statement",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Supervisor Signoff BOM Hourly Check",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[usp_ww_supervisorsignoffbomhourlycheck]"
						},
						"linkedServiceName": {
							"referenceName": "WWSQL003",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP Fail Email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Merge Statement",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-24.australiasoutheast.logic.azure.com:443/workflows/d77213c4f1ec4ab89956fb3256ee6f0b/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=JdvR2R2i-AADVzAwGjO9cFUL5shYwrH-ITahY10Tw-0",
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"Subject": "An error has occurred!",
								"ErrorMessage": "The ADF pipeline has crashed! Please check the logs.",
								"EmailTo": "WWSQL_Admins@wineworks.co.nz"
							}
						}
					},
					{
						"name": "Email on Failure",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Supervisor Signoff BOM Hourly Check",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-24.australiasoutheast.logic.azure.com:443/workflows/d77213c4f1ec4ab89956fb3256ee6f0b/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=JdvR2R2i-AADVzAwGjO9cFUL5shYwrH-ITahY10Tw-0",
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"Subject": "An error has occurred!",
								"ErrorMessage": "The ADF pipeline has crashed! Please check the logs.",
								"EmailTo": "WWSQL_Admins@wineworks.co.nz"
							}
						}
					},
					{
						"name": "Last modifiedon",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT coalesce(MAX(CAST(SWITCHOFFSET(modifiedon, -DATEPART(TZOFFSET, modifiedon AT TIME ZONE 'New Zealand Standard Time')) AS DATETIME)),'2018-01-01') AS last_modifiedon\nFROM [Dataverse].[dbo].[ww_supervisorsignoffbomhourlycheck];",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "wwsql003_ww_supervisorsignoffbomhourlycheck",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ww_tanker')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Tanker",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Last modifiedon",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CommonDataServiceForAppsSource",
								"query": {
									"value": "<fetch>\n  <entity name=\"ww_tanker\">\n    <all-attributes />\n    <filter>\n      <condition attribute=\"modifiedon\" operator=\"gt\" value=\"@{activity('Last modifiedon').output.firstRow.last_modifiedon}\" />\n    </filter>\n  </entity>\n</fetch>\n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ww_tankerid"
									]
								},
								"sqlWriterUseTableLock": true
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "createdon",
											"type": "DateTime"
										},
										"sink": {
											"name": "createdon",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "modifiedon",
											"type": "DateTime"
										},
										"sink": {
											"name": "modifiedon",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "statuscode",
											"type": "Int32"
										},
										"sink": {
											"name": "statuscode",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "ww_inactive",
											"type": "Boolean"
										},
										"sink": {
											"name": "ww_inactive",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "ww_name",
											"type": "String"
										},
										"sink": {
											"name": "ww_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ww_site",
											"type": "Guid"
										},
										"sink": {
											"name": "ww_site",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "ww_tankerid",
											"type": "Guid"
										},
										"sink": {
											"name": "ww_tankerid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "ww_volume",
											"type": "Int32"
										},
										"sink": {
											"name": "ww_volume",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Tanker",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwsql003_ww_tanker",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Merge Statement",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Tanker",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[usp_ww_tanker]"
						},
						"linkedServiceName": {
							"referenceName": "WWSQL003",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP Fail Email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Merge Statement",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-24.australiasoutheast.logic.azure.com:443/workflows/d77213c4f1ec4ab89956fb3256ee6f0b/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=JdvR2R2i-AADVzAwGjO9cFUL5shYwrH-ITahY10Tw-0",
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"Subject": "An error has occurred!",
								"ErrorMessage": "The ADF pipeline has crashed! Please check the logs.",
								"EmailTo": "wwsql_admins@wineworks.co.nz"
							}
						}
					},
					{
						"name": "Email on Failure Tanker",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Tanker",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-24.australiasoutheast.logic.azure.com:443/workflows/d77213c4f1ec4ab89956fb3256ee6f0b/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=JdvR2R2i-AADVzAwGjO9cFUL5shYwrH-ITahY10Tw-0",
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"Subject": "An error has occurred!",
								"ErrorMessage": "The ADF pipeline has crashed! Please check the logs.",
								"EmailTo": "wwsql_admins@wineworks.co.nz"
							}
						}
					},
					{
						"name": "Last modifiedon",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT coalesce(MAX(CAST(SWITCHOFFSET(modifiedon, -DATEPART(TZOFFSET, modifiedon AT TIME ZONE 'New Zealand Standard Time')) AS DATETIME)),'2018-01-01') AS last_modifiedon\nFROM [Dataverse].[dbo].[ww_tanker];",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "wwsql003_ww_tanker",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ww_winery')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Winery",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Last modifiedon",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CommonDataServiceForAppsSource",
								"query": {
									"value": "<fetch>\n  <entity name=\"ww_winery\">\n    <all-attributes />\n    <filter>\n      <condition attribute=\"modifiedon\" operator=\"gt\" value=\"@{activity('Last modifiedon').output.firstRow.last_modifiedon}\" />\n    </filter>\n  </entity>\n</fetch>\n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ww_wineryid"
									]
								},
								"sqlWriterUseTableLock": true
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "createdon",
											"type": "DateTime"
										},
										"sink": {
											"name": "createdon",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "modifiedon",
											"type": "DateTime"
										},
										"sink": {
											"name": "modifiedon",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "statuscode",
											"type": "Int32"
										},
										"sink": {
											"name": "statuscode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ww_location",
											"type": "String"
										},
										"sink": {
											"name": "ww_location",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ww_wineryid",
											"type": "Guid"
										},
										"sink": {
											"name": "ww_wineryid",
											"type": "Guid"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Winery",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwsql003_ww_winery",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Merge Statement",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Winery",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_ww_winery]"
						},
						"linkedServiceName": {
							"referenceName": "WWSQL003",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP Fail Email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Merge Statement",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-24.australiasoutheast.logic.azure.com:443/workflows/d77213c4f1ec4ab89956fb3256ee6f0b/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=JdvR2R2i-AADVzAwGjO9cFUL5shYwrH-ITahY10Tw-0",
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"Subject": "An error has occurred!",
								"ErrorMessage": "The ADF pipeline has crashed! Please check the logs.",
								"EmailTo": "wwsql_admins@wineworks.co.nz"
							}
						}
					},
					{
						"name": "Email on Failure Winery",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Winery",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-24.australiasoutheast.logic.azure.com:443/workflows/d77213c4f1ec4ab89956fb3256ee6f0b/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=JdvR2R2i-AADVzAwGjO9cFUL5shYwrH-ITahY10Tw-0",
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"Subject": "An error has occurred!",
								"ErrorMessage": "The ADF pipeline has crashed! Please check the logs.",
								"EmailTo": "wwsql_admins@wineworks.co.nz"
							}
						}
					},
					{
						"name": "Last modifiedon",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT coalesce(MAX(CAST(SWITCHOFFSET(modifiedon, -DATEPART(TZOFFSET, modifiedon AT TIME ZONE 'New Zealand Standard Time')) AS DATETIME)),'2018-01-01') AS last_modifiedon\nFROM [Dataverse].[dbo].[ww_winery];",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "wwsql003_ww_winery",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/prod-databricks-downtimes-30mins')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "PROD Databricks Downtimes",
						"type": "PipelineReference"
					},
					"parameters": {
						"triggerStart": "[parameters('prod-databricks-downtimes-30mins_properties_pipeline_parameters_triggerStart')]",
						"triggerEnd": "[parameters('prod-databricks-downtimes-30mins_properties_pipeline_parameters_triggerEnd')]",
						"modifiedonColumn": "[parameters('prod-databricks-downtimes-30mins_properties_pipeline_parameters_modifiedonColumn')]",
						"partitionColumn": "[parameters('prod-databricks-downtimes-30mins_properties_pipeline_parameters_partitionColumn')]",
						"tableName": "[parameters('prod-databricks-downtimes-30mins_properties_pipeline_parameters_tableName')]",
						"partitionBySecondary": "[parameters('prod-databricks-downtimes-30mins_properties_pipeline_parameters_partitionBySecondary')]",
						"secondaryPartitionColumnName": "[parameters('prod-databricks-downtimes-30mins_properties_pipeline_parameters_secondaryPartitionColumnName')]",
						"dropDataverseDefaults": "[parameters('prod-databricks-downtimes-30mins_properties_pipeline_parameters_dropDataverseDefaults')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 30,
					"startTime": "2024-12-02T18:00:00Z",
					"delay": "00:05:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"count": 3,
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/prod-databricks-runstartends-30mins')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "PROD Databricks RunStartEnds",
						"type": "PipelineReference"
					},
					"parameters": {
						"triggerStart": "[parameters('prod-databricks-runstartends-30mins_properties_pipeline_parameters_triggerStart')]",
						"triggerEnd": "[parameters('prod-databricks-runstartends-30mins_properties_pipeline_parameters_triggerEnd')]",
						"modifiedonColumn": "[parameters('prod-databricks-runstartends-30mins_properties_pipeline_parameters_modifiedonColumn')]",
						"partitionColumn": "[parameters('prod-databricks-runstartends-30mins_properties_pipeline_parameters_partitionColumn')]",
						"tableName": "[parameters('prod-databricks-runstartends-30mins_properties_pipeline_parameters_tableName')]",
						"partitionBySecondary": "[parameters('prod-databricks-runstartends-30mins_properties_pipeline_parameters_partitionBySecondary')]",
						"secondaryPartitionColumnName": "[parameters('prod-databricks-runstartends-30mins_properties_pipeline_parameters_secondaryPartitionColumnName')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 30,
					"startTime": "2024-11-28T01:00:00Z",
					"delay": "00:05:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"count": 3,
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/prod-databricks-systemuser-1day')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "PROD Databricks Users",
						"type": "PipelineReference"
					},
					"parameters": {
						"triggerStart": "[parameters('prod-databricks-systemuser-1day_properties_pipeline_parameters_triggerStart')]",
						"triggerEnd": "[parameters('prod-databricks-systemuser-1day_properties_pipeline_parameters_triggerEnd')]",
						"modifiedonColumn": "[parameters('prod-databricks-systemuser-1day_properties_pipeline_parameters_modifiedonColumn')]",
						"partitionColumn": "[parameters('prod-databricks-systemuser-1day_properties_pipeline_parameters_partitionColumn')]",
						"tableName": "[parameters('prod-databricks-systemuser-1day_properties_pipeline_parameters_tableName')]",
						"partitionBySecondary": "[parameters('prod-databricks-systemuser-1day_properties_pipeline_parameters_partitionBySecondary')]",
						"secondaryPartitionColumnName": "[parameters('prod-databricks-systemuser-1day_properties_pipeline_parameters_secondaryPartitionColumnName')]",
						"dropDataverseDefaults": "[parameters('prod-databricks-systemuser-1day_properties_pipeline_parameters_dropDataverseDefaults')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2024-12-10T21:45:00Z",
					"delay": "00:05:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"count": 1,
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/prod-databricks-ww_billofmaterials-1hour')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "PROD Databricks ww_billofmaterials",
						"type": "PipelineReference"
					},
					"parameters": {
						"triggerStart": "[parameters('prod-databricks-ww_billofmaterials-1hour_properties_pipeline_parameters_triggerStart')]",
						"triggerEnd": "[parameters('prod-databricks-ww_billofmaterials-1hour_properties_pipeline_parameters_triggerEnd')]",
						"modifiedonColumn": "[parameters('prod-databricks-ww_billofmaterials-1hour_properties_pipeline_parameters_modifiedonColumn')]",
						"partitionColumn": "[parameters('prod-databricks-ww_billofmaterials-1hour_properties_pipeline_parameters_partitionColumn')]",
						"tableName": "[parameters('prod-databricks-ww_billofmaterials-1hour_properties_pipeline_parameters_tableName')]",
						"partitionBySecondary": "[parameters('prod-databricks-ww_billofmaterials-1hour_properties_pipeline_parameters_partitionBySecondary')]",
						"secondaryPartitionColumnName": "[parameters('prod-databricks-ww_billofmaterials-1hour_properties_pipeline_parameters_secondaryPartitionColumnName')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 1,
					"startTime": "2024-12-04T01:00:00Z",
					"delay": "00:05:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"count": 3,
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/prod-databricks-ww_run-1hour')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "PROD Databricks ww_run",
						"type": "PipelineReference"
					},
					"parameters": {
						"triggerStart": "[parameters('prod-databricks-ww_run-1hour_properties_pipeline_parameters_triggerStart')]",
						"triggerEnd": "[parameters('prod-databricks-ww_run-1hour_properties_pipeline_parameters_triggerEnd')]",
						"modifiedonColumn": "[parameters('prod-databricks-ww_run-1hour_properties_pipeline_parameters_modifiedonColumn')]",
						"partitionColumn": "[parameters('prod-databricks-ww_run-1hour_properties_pipeline_parameters_partitionColumn')]",
						"tableName": "[parameters('prod-databricks-ww_run-1hour_properties_pipeline_parameters_tableName')]",
						"partitionBySecondary": "[parameters('prod-databricks-ww_run-1hour_properties_pipeline_parameters_partitionBySecondary')]",
						"secondaryPartitionColumnName": "[parameters('prod-databricks-ww_run-1hour_properties_pipeline_parameters_secondaryPartitionColumnName')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 1,
					"startTime": "2024-12-04T01:00:00Z",
					"delay": "00:05:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"count": 3,
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test-databricks-downtimes-1day')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "G2 Dataverse to DatabricksTEST Downtimes",
						"type": "PipelineReference"
					},
					"parameters": {
						"triggerStart": "[parameters('test-databricks-downtimes-1day_properties_pipeline_parameters_triggerStart')]",
						"triggerEnd": "[parameters('test-databricks-downtimes-1day_properties_pipeline_parameters_triggerEnd')]",
						"modifiedonColumn": "[parameters('test-databricks-downtimes-1day_properties_pipeline_parameters_modifiedonColumn')]",
						"partitionColumn": "[parameters('test-databricks-downtimes-1day_properties_pipeline_parameters_partitionColumn')]",
						"tableName": "[parameters('test-databricks-downtimes-1day_properties_pipeline_parameters_tableName')]",
						"partitionBySecondary": "[parameters('test-databricks-downtimes-1day_properties_pipeline_parameters_partitionBySecondary')]",
						"secondaryPartitionColumnName": "[parameters('test-databricks-downtimes-1day_properties_pipeline_parameters_secondaryPartitionColumnName')]",
						"dropDataverseDefaults": "[parameters('test-databricks-downtimes-1day_properties_pipeline_parameters_dropDataverseDefaults')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2024-12-03T21:00:00Z",
					"delay": "00:05:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"count": 3,
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test-databricks-runstartends-1day')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "G2 Dataverse to Databricks RunStartEndsTEST",
						"type": "PipelineReference"
					},
					"parameters": {
						"triggerStart": "[parameters('test-databricks-runstartends-1day_properties_pipeline_parameters_triggerStart')]",
						"triggerEnd": "[parameters('test-databricks-runstartends-1day_properties_pipeline_parameters_triggerEnd')]",
						"modifiedonColumn": "[parameters('test-databricks-runstartends-1day_properties_pipeline_parameters_modifiedonColumn')]",
						"partitionColumn": "[parameters('test-databricks-runstartends-1day_properties_pipeline_parameters_partitionColumn')]",
						"tableName": "[parameters('test-databricks-runstartends-1day_properties_pipeline_parameters_tableName')]",
						"partitionBySecondary": "[parameters('test-databricks-runstartends-1day_properties_pipeline_parameters_partitionBySecondary')]",
						"secondaryPartitionColumnName": "[parameters('test-databricks-runstartends-1day_properties_pipeline_parameters_secondaryPartitionColumnName')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2024-12-03T21:00:00Z",
					"delay": "00:05:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"count": 3,
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test-databricks-ww_billofmaterials-1day')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "G2 Dataverse to DatabricksTEST BOMS",
						"type": "PipelineReference"
					},
					"parameters": {
						"triggerStart": "[parameters('test-databricks-ww_billofmaterials-1day_properties_pipeline_parameters_triggerStart')]",
						"triggerEnd": "[parameters('test-databricks-ww_billofmaterials-1day_properties_pipeline_parameters_triggerEnd')]",
						"modifiedonColumn": "[parameters('test-databricks-ww_billofmaterials-1day_properties_pipeline_parameters_modifiedonColumn')]",
						"partitionColumn": "[parameters('test-databricks-ww_billofmaterials-1day_properties_pipeline_parameters_partitionColumn')]",
						"tableName": "[parameters('test-databricks-ww_billofmaterials-1day_properties_pipeline_parameters_tableName')]",
						"partitionBySecondary": "[parameters('test-databricks-ww_billofmaterials-1day_properties_pipeline_parameters_partitionBySecondary')]",
						"secondaryPartitionColumnName": "[parameters('test-databricks-ww_billofmaterials-1day_properties_pipeline_parameters_secondaryPartitionColumnName')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2024-12-04T01:00:00Z",
					"delay": "00:05:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"count": 3,
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test-databricks-ww_run-1day')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "G2 Dataverse to DatabricksTEST Run",
						"type": "PipelineReference"
					},
					"parameters": {
						"triggerStart": "[parameters('test-databricks-ww_run-1day_properties_pipeline_parameters_triggerStart')]",
						"triggerEnd": "[parameters('test-databricks-ww_run-1day_properties_pipeline_parameters_triggerEnd')]",
						"modifiedonColumn": "[parameters('test-databricks-ww_run-1day_properties_pipeline_parameters_modifiedonColumn')]",
						"partitionColumn": "[parameters('test-databricks-ww_run-1day_properties_pipeline_parameters_partitionColumn')]",
						"tableName": "[parameters('test-databricks-ww_run-1day_properties_pipeline_parameters_tableName')]",
						"partitionBySecondary": "[parameters('test-databricks-ww_run-1day_properties_pipeline_parameters_partitionBySecondary')]",
						"secondaryPartitionColumnName": "[parameters('test-databricks-ww_run-1day_properties_pipeline_parameters_secondaryPartitionColumnName')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2024-12-03T01:00:00Z",
					"delay": "00:05:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"count": 3,
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Every 10 minutes')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ww_bottlebatchsummary",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_runreportbottlelabelpack",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 10,
						"startTime": "2023-02-13T23:06:00",
						"timeZone": "New Zealand Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Every 30 Minutes')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ww_cartonusage",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_cartonusagedetail",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_prebottlinganalysisrecheck",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_tanker",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_site",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_filleroperation",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_qcendofrun",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_qchourlycheck",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_qcrecheck",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_qcstartup",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_run",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_stockcheckin",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_stockcheckinentry",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_supervisorsignoff",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_supervisorsignoffbom",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_closurebatchsummary",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_hourlylabellinglogsheet",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_hourlytorqueandvolume",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_labelchange",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_labellingissues",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_labellingpreflight",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_operator",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_prebottlinganalysisgasadjustments",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_operatorbottlingdowntime",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_operatorbottlingbreakage",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_prebottlinganalysissignoff",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_billofmaterials",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_bottlebatchrejects",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_palletstacking",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_prebottlinganalysissulphuradj",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_supervisorsignoffbomhourlycheck",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_hourlycartonusage",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_palletstackinghourly",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_winery",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_operatorbottlinghourly",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 30,
						"startTime": "2025-01-14T19:15:00",
						"timeZone": "New Zealand Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ww_tanker')]",
				"[concat(variables('factoryId'), '/pipelines/ww_supervisorsignoffbomhourlycheck')]",
				"[concat(variables('factoryId'), '/pipelines/ww_winery')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Every Half Hour')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "BOM",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ProductionLine",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Site",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ww_auditlog",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 30,
						"startTime": "2021-03-25T12:31:00",
						"timeZone": "New Zealand Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Job Costing - Weekly')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "IOT_Run Databricks to sql",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2024-12-06T00:46:00",
						"timeZone": "New Zealand Standard Time",
						"schedule": {
							"weekDays": [
								"Saturday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Prebottlinganalysis')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ww_prebottlinganalysis",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 30,
						"startTime": "2025-01-14T19:49:00",
						"timeZone": "New Zealand Standard Time"
					}
				}
			},
			"dependsOn": []
		}
	]
}